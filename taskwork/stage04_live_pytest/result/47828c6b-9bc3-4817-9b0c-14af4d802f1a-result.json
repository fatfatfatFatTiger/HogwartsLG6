{"name": "test_mul[bigint]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 10000 == 1000", "trace": "self = <HogwartsLG6.taskwork.stage4_live_pytest.test_calc_new.TestCalc object at 0x0000024858EC30A0>\nget_calc1 = <HogwartsLG6.taskwork.stage4_live_pytest.common.calc.Calculator object at 0x0000024858E97520>\nget_mul_datas = [100, 100, 1000]\n\n    @allure.story(\"测试乘法\")\n    def test_mul(self, get_calc1, get_mul_datas):\n        with allure.step(\"计算两个数相乘积\"):\n            result = get_calc1.mul(get_mul_datas[0], get_mul_datas[1])\n        if isinstance(result, float):\n            result = round(result, 2)\n>       assert result == get_mul_datas[2]\nE       assert 10000 == 1000\n\ntest_calc_new.py:47: AssertionError"}, "steps": [{"name": "计算两个数相乘积", "status": "passed", "start": 1613916340389, "stop": 1613916340389}], "attachments": [{"name": "stdout", "source": "a342dfa6-09d4-4918-8d53-78464fa74316-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "get_mul_datas", "value": "[100, 100, 1000]"}], "start": 1613916340389, "stop": 1613916340389, "uuid": "dec63144-9913-47f7-a1f2-6779dca3f455", "historyId": "95d344fa5a63bb3f32cbf41da9f645cb", "testCaseId": "fe6bda14bd0e8d9a8af1eb7bd6c20851", "fullName": "test_calc_new.TestCalc#test_mul", "labels": [{"name": "feature", "value": "测试计算器"}, {"name": "story", "value": "测试乘法"}, {"name": "suite", "value": "test_calc_new"}, {"name": "subSuite", "value": "TestCalc"}, {"name": "host", "value": "ELF"}, {"name": "thread", "value": "6812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_calc_new"}]}